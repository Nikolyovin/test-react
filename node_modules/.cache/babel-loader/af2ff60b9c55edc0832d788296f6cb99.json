{"ast":null,"code":"var _jsxFileName = \"/home/niko/test-react/my-app/src/Panel.jsx\";\nimport react from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Panel = props => {\n  let pathInput = /*#__PURE__*/react.createRef();\n  let newValue = /*#__PURE__*/react.createRef();\n\n  const setValue = () => {\n    pathInput = pathInput.current.value;\n    newValue = newValue.current.value;\n    /*props.state.content.map(obj=>({...obj[2], pathInput : newValue}))*/\n\n    for (let key in props.state) {\n      if (key === pathInput) {\n        key = newValue;\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panel-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-input-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u041F\\u0443\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"panel-input panel-input-path\",\n        type: \"text\",\n        ref: pathInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-input-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"panel-input panel-input-newValue\",\n        type: \"text\",\n        ref: newValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setValue,\n      className: \"panel-button\",\n      children: \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Panel;\nexport default Panel;\n/*Object.assign(props[pathInput.current.value],newValue.current.value)*/\n\n/*const setValue=(props.content.map(obj=>{\r\n   if (obj==pathInput.current.value){\r\n      return{...obj,[pathInput.current.value]:newValue.current.value}\r\n   }else{\r\n      return obj\r\n   }\r\n}))*/\n\n/*pathInput.current.value = newValue.current.value*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Panel\");","map":{"version":3,"sources":["/home/niko/test-react/my-app/src/Panel.jsx"],"names":["react","Panel","props","pathInput","createRef","newValue","setValue","current","value","key","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAEtB,MAAIC,SAAS,gBAAGH,KAAK,CAACI,SAAN,EAAhB;AACA,MAAIC,QAAQ,gBAAGL,KAAK,CAACI,SAAN,EAAf;;AAEA,QAAME,QAAQ,GAAG,MAAM;AACpBH,IAAAA,SAAS,GAAGA,SAAS,CAACI,OAAV,CAAkBC,KAA9B;AACAH,IAAAA,QAAQ,GAAGA,QAAQ,CAACE,OAAT,CAAiBC,KAA5B;AACA;;AACA,SAAK,IAAIC,GAAT,IAAgBP,KAAK,CAACQ,KAAtB,EAA6B;AAC1B,UAAID,GAAG,KAAKN,SAAZ,EAAuB;AACpBM,QAAAA,GAAG,GAAGJ,QAAN;AACF;AACH;AAEH,GAVD;;AAaA,sBACG;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACG;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAO,QAAA,SAAS,EAAC,8BAAjB;AAAgD,QAAA,IAAI,EAAC,MAArD;AAA4D,QAAA,GAAG,EAAEF;AAAjE;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAKG;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAO,QAAA,SAAS,EAAC,kCAAjB;AAAoD,QAAA,IAAI,EAAC,MAAzD;AAAgE,QAAA,GAAG,EAAEE;AAArE;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YALH,eASG;AAAQ,MAAA,OAAO,EAAEC,QAAjB;AAA2B,MAAA,SAAS,EAAC,cAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATH;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAaF,CA/BD;;KAAML,K;AAiCN,eAAeA,KAAf;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","sourcesContent":["import react from 'react'\r\nimport './style.css'\r\n\r\nconst Panel = (props) => {\r\n\r\n   let pathInput = react.createRef()\r\n   let newValue = react.createRef()\r\n\r\n   const setValue = () => {\r\n      pathInput = pathInput.current.value\r\n      newValue = newValue.current.value\r\n      /*props.state.content.map(obj=>({...obj[2], pathInput : newValue}))*/\r\n      for (let key in props.state) {\r\n         if (key === pathInput) {\r\n            key = newValue\r\n         }\r\n      }\r\n\r\n   }\r\n\r\n\r\n   return (\r\n      <div className='panel-wrap'>\r\n         <div className='panel-input-wrap'>\r\n            <span>Путь</span>\r\n            <input className='panel-input panel-input-path' type='text' ref={pathInput} />\r\n         </div>\r\n         <div className='panel-input-wrap'>\r\n            <span>Новое значение</span>\r\n            <input className='panel-input panel-input-newValue' type='text' ref={newValue} />\r\n         </div>\r\n         <button onClick={setValue} className='panel-button'>Применить</button>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Panel\r\n\r\n/*Object.assign(props[pathInput.current.value],newValue.current.value)*/\r\n\r\n/*const setValue=(props.content.map(obj=>{\r\n   if (obj==pathInput.current.value){\r\n      return{...obj,[pathInput.current.value]:newValue.current.value}\r\n   }else{\r\n      return obj\r\n   }\r\n}))*/\r\n\r\n/*pathInput.current.value = newValue.current.value*/"]},"metadata":{},"sourceType":"module"}